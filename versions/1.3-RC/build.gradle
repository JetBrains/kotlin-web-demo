/*
 * Copyright 2000-2018 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven {
            url  "https://dl.bintray.com/kotlin/kotlin-dev"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0-rc-46"
    }
}

plugins {
    id "com.github.jk1.tcdeps" version "0.15"
}

apply plugin: "org.jetbrains.kotlin.jvm"


repositories {
    teamcityServer {
        url = 'http://teamcity.jetbrains.com'
    }
    maven {
        url  "https://dl.bintray.com/kotlin/kotlin-dev"
    }
}

configurations {
    kotlinJVM
    kotlinJS
    library
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xskip-metadata-version-check"]
}


dependencies {
    compile project(":kotlin.web.demo.backend:compilers")

    def root = "$kotlinBuildType:$kotlinBuild:kotlin-plugin-${pluginBuild}.zip!/Kotlin/kotlinc/lib"
    def j2k = "$kotlinBuildType:$kotlinBuild:kotlin-plugin-${pluginBuild}.zip!/Kotlin/lib"

    kotlinJVM tc("$root/kotlin-compiler.jar")
    kotlinJVM tc("$j2k/j2k.jar")
    kotlinJVM tc("$root/kotlin-script-runtime.jar")
    kotlinJVM tc("$root/kotlin-stdlib.jar")
    kotlinJVM tc("$root/kotlin-stdlib-jdk7.jar")
    kotlinJVM tc("$root/kotlin-stdlib-jdk8.jar")
    kotlinJVM tc("$kotlinBuildType:$kotlinBuild:kotlin-plugin-${pluginBuild}.zip!/Kotlin/lib/kotlin-plugin.jar")
    kotlinJVM tc("$root/kotlin-reflect.jar")
    kotlinJS tc("$root/kotlin-stdlib-js.jar")

    library tc("$root/kotlin-reflect.jar")
    library tc("$root/kotlin-stdlib.jar")
    library tc("$root/kotlin-stdlib-jdk7.jar")
    library tc("$root/kotlin-stdlib-jdk8.jar")
    library tc("$root/kotlin-test.jar")
    library("org.jetbrains.kotlinx:kotlinx-coroutines-core:0.26.1-eap13") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    /**
     * ADD DEPENDENCIES TO KOTLIN 1.3-RC COMPILER
     *
     * If you want to add some another dependencies to kotlin-compiler you can use 'library' task.
     *
     * For example:
     *
     * library "your dependency from maven"
     *
     * FYI: Pay attention if yor library has got reflections, work with files and etc
     * Please configure the 'executors.policy.template' in web-demo-backend.
     * @see <a href="https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html">Java Security Police</a>
     *
     * HOW TO SET Java Security Police in 'executors.policy.template'
     *
     * If you want to add own dependency please use marker @WRAPPERS_LIB@
     *
     * For example:
     *
     * grant codeBase "file:@WRAPPERS_LIB@/junit-4.12.jar" {
     *      permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
     *      permission java.lang.RuntimePermission "setIO";
     *      permission java.io.FilePermission "<<ALL FILES>>", "read";
     *      permission java.lang.RuntimePermission "accessDeclaredMembers";
     * };
     */

    compile fileTree(dir: projectDir.toString() + File.separator + "kotlin", include: '*.jar')
}

task copyKotlinLibs(type: Copy) {
    from configurations.kotlinJVM
    into projectDir.toString() + File.separator + "kotlin"
}

